x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
theme(legend.position = "bottom")
# Definir o nome do arquivo com o diretório especificado
file_name <- paste(directory, "normalized_plot_", var, ".png", sep = "")
# Salvar o plot como um arquivo PNG
ggsave(plot = plot, filename = file_name, width = 8, height = 6, dpi = 300)
return(plot)
})
# Imprimir os plots
print(plots)
library(zoo)
library(anytime)
library(ggplot2)
library(viridis)
library(dplyr)
library(tidyr)
library(scales)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency = "1y"
# df_3y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_3y_yearly.csv")
# df_3y$frequency = "3y"
#
# df_5y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_5y_yearly.csv")
# df_5y$frequency = "5y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency = "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency = "regclim"
# df_combined <- rbind(df_1y, df_3y, df_5y, df_7y, df_regclim)
df_combined <- rbind(df_1y, df_7y, df_regclim)
# df_combined$date = anydate(df_combined$date)
# Converta a coluna "frequency" para o tipo fator
df_combined$frequency <- as.factor(df_combined$frequency)
## Definição das cores para cada categoria
# cores <- c("1y" = "lightsalmon2",
#            "3y" = "gold1",
#            "5y" = "#9370DB",
#            "7y" = "seagreen4",
#            "regclim" = "steelblue3")
## Definição das cores para cada categoria
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Plot das séries temporais para cada variável
df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
ggplot(aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +  # Aplicando as cores específicas
labs(title = "",
x = "",
y = "") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,   # Remove subplots vazios
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))
#normalizado:
library(ggplot2)
library(tidyr)
library(dplyr)
# Definição das cores para cada categoria
cores <- c("1y" = "firebrick3",
"7y" = "#9370DB",
"regclim" = "steelblue1")
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Normalização dos dados para o intervalo de 0 a 1
normalize_0_1 <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
# Aplicar a função de normalização às variáveis desejadas
df_normalized <- df_combined %>%
mutate(across(variaveis, normalize_0_1))
# Especifique o diretório onde deseja salvar os plots
directory <- "/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/plots_var_yearly/"
# Criar e salvar cada plot separadamente
plots <- lapply(unique(df_normalized$name), function(var) {
plot <- ggplot(data = filter(df_normalized, name == var), aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
theme(legend.position = "bottom")
# Definir o nome do arquivo com o diretório especificado
file_name <- paste(directory, "normalized_plot_", var, ".png", sep = "")
# Salvar o plot como um arquivo PNG
ggsave(plot = plot, filename = file_name, width = 8, height = 6, dpi = 300)
return(plot)
dev.off()
})
# Imprimir os plots
print(plots)
library(zoo)
library(anytime)
library(ggplot2)
library(dplyr)
library(tidyr)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency <- "1y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency <- "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency <- "regclim"
df_combined <- rbind(df_1y, df_7y, df_regclim)
df_combined$date <- anydate(df_combined$date)
df_combined$frequency <- as.factor(df_combined$frequency)
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
ggplot(aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "",
y = "") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))
library(ggplot2)
library(tidyr)
library(dplyr)
cores <- c("1y" = "firebrick3",
"7y" = "#9370DB",
"regclim" = "steelblue1")
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
normalize_0_1 <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
df_normalized <- df_combined %>%
mutate(across(variaveis, normalize_0_1))
directory <- "/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/plots_var_yearly/"
plots <- lapply(unique(df_normalized$name), function(var) {
plot <- ggplot(data = filter(df_normalized, name == var), aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
theme(legend.position = "bottom")
file_name <- paste(directory, "normalized_plot_", var, ".png", sep = "")
ggsave(plot = plot, filename = file_name, width = 8, height = 6, dpi = 300)
return(plot)
})
# Salvar os plots
dev.off()
library(zoo)
library(anytime)
library(ggplot2)
library(dplyr)
library(tidyr)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency <- "1y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency <- "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency <- "regclim"
df_combined <- rbind(df_1y, df_7y, df_regclim)
df_combined$date <- anydate(df_combined$date)
df_combined$frequency <- as.factor(df_combined$frequency)
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
df_normalized <- df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
group_by(name) %>%
mutate(value_normalized = (value - min(value)) / (max(value) - min(value))) %>%
ungroup()
df_normalized %>%
ggplot(aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies"))))
library(zoo)
library(anytime)
library(ggplot2)
library(dplyr)
library(tidyr)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency <- "1y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency <- "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency <- "regclim"
df_combined <- rbind(df_1y, df_7y, df_regclim)
df_combined$date <- anydate(df_combined$date)
df_combined$frequency <- as.factor(df_combined$frequency)
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
df_normalized <- df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
group_by(name) %>%
mutate(value_normalized = (value - min(value)) / (max(value) - min(value))) %>%
ungroup()
df_normalized %>%
ggplot(aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies"))))
library(zoo)
library(anytime)
library(ggplot2)
library(dplyr)
library(tidyr)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency <- "1y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency <- "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency <- "regclim"
df_combined <- rbind(df_1y, df_7y, df_regclim)
df_combined$date <- anydate(df_combined$date)
df_combined$frequency <- as.factor(df_combined$frequency)
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
df_normalized <- df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
group_by(name) %>%
mutate(value_normalized = (value - min(value)) / (max(value) - min(value))) %>%
ungroup()
df_normalized %>%
ggplot(aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))
library(scales)
# Especificar o formato para o eixo Y (apenas ano)
y_date_format <- scales::date_format("%Y")
df_normalized %>%
ggplot(aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))+
scale_y_continuous(labels = y_date_format) # Aplicar o formato de data no eixo Y
library(dplyr)
library(scales)
# Convertendo a data para o ano
df_normalized <- df_normalized %>%
mutate(year = as.numeric(format(date, "%Y")))
# Definindo o formato do eixo Y para mostrar apenas o ano
y_axis_formatter <- function(x) {
format(as.Date(paste0(x, "-01-01")), "%Y")
}
df_normalized %>%
ggplot(aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Year",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))+
scale_y_continuous(labels = y_axis_formatter) # Aplicar o formato de data no eixo Y
# Primeiro, vamos carregar as bibliotecas necessárias
library(ggplot2)
library(dplyr)
library(scales)
# Supondo que você tem um dataframe chamado df_normalized com colunas "date" e "value_normalized"
# Convertendo a data para o ano
df_normalized <- df_normalized %>%
mutate(year = as.factor(format(date, "%Y")))
# Criando o gráfico
ggplot(df_normalized, aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Date",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y", drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))+
scale_y_continuous(labels = function(x) as.factor(format(x, "%Y"))) # Definindo o formato do eixo Y para mostrar apenas o ano
# Primeiro, vamos carregar as bibliotecas necessárias
library(ggplot2)
library(dplyr)
library(scales)
# Supondo que você tem um dataframe chamado df_normalized com colunas "date" e "value_normalized"
# Convertendo a data para o ano
df_normalized <- df_normalized %>%
mutate(year = as.factor(format(date, "%Y")))
# Criando o gráfico
ggplot(df_normalized, aes(x = date, y = value_normalized, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +
labs(title = "",
x = "Date",
y = "Normalized value",
color = "Frequency of disturbance") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y", drop = TRUE,
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))+
scale_y_continuous(labels = function(x) format(as.Date(x), "%Y")) # Corrigindo o formato do eixo Y para mostrar apenas o ano
# Primeiro, vamos definir a função para normalizar os dados para o intervalo de 0 a 1
normalize_0_1 <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Normalizar os valores de cada variável no dataframe combinado
df_normalized <- df_combined %>%
mutate(across(all_of(variaveis), normalize_0_1))
## Definição das cores para cada categoria
cores <- c("1y" = "firebrick3",
"7y" = "#9370DB",
"regclim" = "steelblue1")
# Plot das séries temporais normalizadas para cada variável
df_normalized %>%
pivot_longer(cols = all_of(variaveis)) %>%
ggplot(aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +  # Aplicando as cores específicas
labs(title = "",
x = "",
y = "Normalized value") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,   # Remove subplots vazios
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies"))))
# Primeiro, vamos definir a função para normalizar os dados para o intervalo de 0 a 1
normalize_0_1 <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Normalizar os valores de cada variável no dataframe combinado
df_normalized <- df_combined %>%
mutate(across(all_of(variaveis), normalize_0_1))
## Definição das cores para cada categoria
cores <- c("1y" = "firebrick3",
"7y" = "#9370DB",
"regclim" = "steelblue1")
# Plot das séries temporais normalizadas para cada variável
df_normalized %>%
pivot_longer(cols = all_of(variaveis)) %>%
ggplot(aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +  # Aplicando as cores específicas
labs(title = "",
x = "",
y = "Normalized value") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,   # Remove subplots vazios
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))
# Normalização dos dados para o intervalo de 0 a 1
normalize_0_1 <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
# Normalizar os dados
df_combined_norm <- df_combined %>%
mutate(across(npp:ls, normalize_0_1))
# Definição das cores para cada categoria
cores <- c("1y" = "firebrick3",
"7y" = "#9370DB",
"regclim" = "steelblue1")
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Plot das séries temporais normalizadas para cada variável
par(mfrow = c(2, 3)) # Dividir a área de plotagem em 2 linhas e 3 colunas
for (var in variaveis) {
plot(df_combined_norm$date, df_combined_norm[, var],
type = "l", col = cores[df_combined_norm$frequency],
xlab = "Ano", ylab = var, main = var)
legend("topleft", legend = levels(df_combined_norm$frequency),
col = cores, lty = 1)
}
library(zoo)
library(anytime)
library(ggplot2)
library(viridis)
library(dplyr)
library(tidyr)
library(scales)
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_1y_yearly.csv")
df_1y$frequency = "1y"
# df_3y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_3y_yearly.csv")
# df_3y$frequency = "3y"
#
# df_5y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_5y_yearly.csv")
# df_5y$frequency = "5y"
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_30prec_7y_yearly.csv")
df_7y$frequency = "7y"
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/yearly_mean_tables/MAN_regularclimate_yearly.csv")
df_regclim$frequency = "regclim"
# df_combined <- rbind(df_1y, df_3y, df_5y, df_7y, df_regclim)
df_combined <- rbind(df_1y, df_7y, df_regclim)
# df_combined$date = anydate(df_combined$date)
# Converta a coluna "frequency" para o tipo fator
df_combined$frequency <- as.factor(df_combined$frequency)
## Definição das cores para cada categoria
# cores <- c("1y" = "lightsalmon2",
#            "3y" = "gold1",
#            "5y" = "#9370DB",
#            "7y" = "seagreen4",
#            "regclim" = "steelblue3")
## Definição das cores para cada categoria
cores <- c("1y" = "lightsalmon2",
"7y" = "seagreen4",
"regclim" = "steelblue3")
# Lista das variáveis que deseja plotar
variaveis <- c("npp", "ctotal", "evapm", "wue", "ls")
# Plot das séries temporais para cada variável
df_combined %>%
pivot_longer(cols = all_of(variaveis)) %>%
ggplot(aes(x = date, y = value, color = frequency)) +
geom_line() +
scale_color_manual(values = cores) +  # Aplicando as cores específicas
labs(title = "",
x = "",
y = "") +
theme_minimal() +
facet_wrap(~name, nrow = 2, ncol = 3, scales = "free_y",
drop = TRUE,   # Remove subplots vazios
labeller = labeller(name = c("npp" = "NPP",
"ctotal" = "Total carbon",
"evapm" = "Evapotranspiration",
"wue" = "Water use efficiency",
"ls" = "N. of surviving strategies")))
