par(mfrow = c(4, 1))
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Plotar subplots
plot_Tt_Vt(df_regclim, "npp", "1998-06", "")
plot_Tt_Vt(df_regclim, "ctotal", "1992-12", "2002-09")
plot_Tt_Vt(df_regclim, "evapm", "1998-05", "")
plot_Tt_Vt(df_regclim, "wue", "1989-07", "2004-10")
dev.off()
library(bfast)
library(zoo)
library(gridExtra)
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
p_vt <- ggplot(Vt_df, aes(x = Year, y = Value)) +
geom_line(color = "grey") +
geom_vline(xintercept = as.numeric(Vt_df$Year[idx]), linetype = "dashed", color = "red") +
y
f
f
hgfj
hufy78u
o
90)
library(bfast)
library(zoo)
library(gridExtra)
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
p_vt <- ggplot(Vt_df, aes(x = Year, y = Value)) +
geom_line(color = "grey") +
geom_vline(xintercept = as.numeric(Vt_df$Year[idx]), linetype = "dashed", color = "red") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
# Plotar Tt
p_tt <- ggplot(Tt_df, aes(x = Year, y = Value)) +
geom_line(color = "black") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
return(list(p_vt, p_tt))
}
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Plotar subplots
plots <- lapply(list(
list("npp", "1998-06", ""),
list("ctotal", "1992-12", "2002-09"),
list("evapm", "1998-05", ""),
list("wue", "1989-07", "2004-10")
), function(params) {
plot_Tt_Vt(df_regclim, params[[1]], params[[2]], params[[3]])
})
library(gridExtra)
library(bfast)
library(zoo)
library(gridExtra)
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
p_vt <- ggplot(Vt_df, aes(x = Year, y = Value)) +
geom_line(color = "grey") +
geom_vline(xintercept = as.numeric(Vt_df$Year[idx]), linetype = "dashed", color = "red") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
# Plotar Tt
p_tt <- ggplot(Tt_df, aes(x = Year, y = Value)) +
geom_line(color = "black") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
return(list(p_vt, p_tt))
}
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Plotar subplots
plots <- lapply(list(
list("npp", "1998-06", ""),
list("ctotal", "1992-12", "2002-09"),
list("evapm", "1998-05", ""),
list("wue", "1989-07", "2004-10")
), function(params) {
plot_Tt_Vt(df_regclim, params[[1]], params[[2]], params[[3]])
})
library(bfast)
library(zoo)
library(gridExtra)
library(ggplot2)  # Adicionando a biblioteca ggplot2
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
p_vt <- ggplot(Vt_df, aes(x = Year, y = Value)) +
geom_line(color = "grey") +
geom_vline(xintercept = as.numeric(Vt_df$Year[idx]), linetype = "dashed", color = "red") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
# Plotar Tt
p_tt <- ggplot(Tt_df, aes(x = Year, y = Value)) +
geom_line(color = "black") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
return(list(p_vt, p_tt))
}
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Plotar subplots
plots <- lapply(list(
list("npp", "1998-06", ""),
list("ctotal", "1992-12", "2002-09"),
list("evapm", "1998-05", ""),
list("wue", "1989-07", "2004-10")
), function(params) {
plot_Tt_Vt(df_regclim, params[[1]], params[[2]], params[[3]])
})
# Organizar os plots em uma única grade
grid.arrange(grobs = plots, ncol = 1)
library(bfast)
library(zoo)
library(gridExtra)
library(ggplot2)
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
p_vt <- ggplot(Vt_df, aes(x = Year, y = Value)) +
geom_line(color = "grey") +
geom_vline(xintercept = as.numeric(Vt_df$Year[idx]), linetype = "dashed", color = "red") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
# Plotar Tt
p_tt <- ggplot(Tt_df, aes(x = Year, y = Value)) +
geom_line(color = "black") +
ylim(range(c(Tt_df$Value, Vt_df$Value))) +
labs(x = NULL, y = NULL, title = NULL) +
theme_minimal()
return(list(p_vt, p_tt))
}
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Plotar subplots
plots <- lapply(list(
list("npp", "1998-06", ""),
list("ctotal", "1992-12", "2002-09"),
list("evapm", "1998-05", ""),
list("wue", "1989-07", "2004-10")
), function(params) {
plot_Tt_Vt(df_regclim, params[[1]], params[[2]], params[[3]])
})
# Organizar os plots em uma única grade
grid.arrange(grobs = do.call("c", plots), ncol = 1)
library(bfast)
library(zoo)
# Função para plotar Tt e Vt com a linha vertical em junho de 1998
plot_Tt_Vt <- function(table, col_name = var, bp1, bp2) {
# Criando objetos de série temporal para todas as colunas
time_series_list <- lapply(table[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Executar bfast
res_bfast <- bfast(time_series_list[[col_name]], h = 0.25, max.iter = 1)
# Converter a série temporal em um data frame
Vt_df <- data.frame(Year = time(res_bfast$output[[1]]$Vt),
Value = coredata(res_bfast$output[[1]]$Vt))
Tt_df <- data.frame(Year = time(res_bfast$output[[1]]$Tt),
Value = coredata(res_bfast$output[[1]]$Tt))
# Converter "Year" para um formato de data
Vt_df$Year <- as.Date(as.yearmon(Vt_df$Year))
Tt_df$Year <- as.Date(as.yearmon(Tt_df$Year))
# Encontrar o índice correspondente a #1 breakpoint
idx <- which(format(Vt_df$Year, "%Y-%m") == bp1)
idx2 <- which(format(Vt_df$Year, "%Y-%m") == bp2)
# Plotar Vt
plot(Vt_df$Year, Vt_df$Value, type = "l", col = "grey", ylim = range(c(Tt_df$Value, Vt_df$Value)),
xlab = "", ylab = "", main = "")
# Plotar Tt (na frente de Vt)
lines(Tt_df$Year, Tt_df$Value, type = "l", col = "black")
# Adicionar linha vertical em junho de 1998
abline(v = Vt_df$Year[idx], col = "red", lty = 2)
# Adicionar linha vertical em junho de 1998
abline(v = Vt_df$Year[idx2], col = "red", lty = 2)
}
# Carregar dados
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_1y_monthly.csv")
df_3y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_3y_monthly.csv")
df_5y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_5y_monthly.csv")
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_7y_monthly.csv")
#plot regclim npp
plot_Tt_Vt(df_regclim, "npp", "1998-06", "")
#plot regclim npp
plot_Tt_Vt(df_regclim, "ctotal", "1992-12", "2002-09")
#plot regclim npp
plot_Tt_Vt(df_regclim, "evapm", "1998-05", "")
#plot regclim npp
plot_Tt_Vt(df_regclim, "wue", "1989-07", "2004-10")
# # Executar bfast e plotar resultados
#
for (col_name in columns_to_process) {
res_bfast_regclim <- bfast(time_series_list_regclim[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_regclim[[col_name]] <- res_bfast_regclim
# Save the plot
png(paste0(output_path_plots, "bfast_regclim_anova_", col_name, ".png"))
plot(res_bfast_regclim, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
library(bfast)
library(zoo)
#output path to save the plots of ecosystem functions
output_path_plots <- "/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/bfast/plots_ecosystem_functions/plot_anova_trend/"
columns_to_process <- c("npp", "ctotal","evapm","wue")
# df_regclim <- read.csv("/home/amazonfaceme/biancarius/CAETE-DVM-alloc-allom/outputs/MAN/experiments/MAN_regularclimate/gridcell186-239/MAN_regularclimate_monthly.csv")
df_regclim <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_regularclimate_monthly.csv")
# Criando objetos de série temporal para todas as colunas
time_series_list_regclim <- lapply(df_regclim[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_regclim) <- names(df_regclim[, -1])
bfast_res_list_regclim <- list()
res_bfast_regclim <- bfast(time_series_list_regclim$npp,
h = 0.25, max.iter = 1)
plot(res_bfast_regclim, type = "trend", ylab = "Trend")
# # Executar bfast e plotar resultados
#
for (col_name in columns_to_process) {
res_bfast_regclim <- bfast(time_series_list_regclim[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_regclim[[col_name]] <- res_bfast_regclim
# Save the plot
png(paste0(output_path_plots, "bfast_regclim_anova_", col_name, ".png"))
plot(res_bfast_regclim, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
for (col_name in columns_to_process) {
res_bfast_regclim <- bfast(time_series_list_regclim[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_regclim[[col_name]] <- res_bfast_regclim
# Save the plot
png(paste0(output_path_plots, "bfast_regclim_trend_", col_name, ".png"))
plot(res_bfast_regclim, main = col_name, type = "trend", ANOVA = TRUE)
dev.off()
}
# #    30% prec reduction
# #-------------------------------
# #-------------------------------
#
# #-------------------------------
# #           1y freq
# #-------------------------------
#
# # Manaus - 30% prec reduction - 1 year frequency application
# # !!!!! note this is the monthly integrated data frame!!!!!!!
df_1y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_1y_monthly.csv")
# Criando objetos de série temporal para todas as colunas
time_series_list_1y <- lapply(df_1y[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_1y) <- names(df_1y[, -1])
bfast_res_list_1y <- list()
# # Executar bfast e plotar resultados
#
for (col_name in columns_to_process) {
res_bfast_1y <- bfast(time_series_list_1y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_1y[[col_name]] <- res_bfast_1y
# Save the plot
png(paste0(output_path_plots, "bfast_1y_anova_", col_name, ".png"))
plot(res_bfast_1y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
for (col_name in columns_to_process) {
res_bfast_1y <- bfast(time_series_list_1y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_1y[[col_name]] <- res_bfast_1y
# Save the plot
png(paste0(output_path_plots, "bfast_1y_trend_", col_name, ".png"))
plot(res_bfast_1y, main = col_name, type = "trend", ANOVA = TRUE)
dev.off()
}
# plot(res_bfast, main = "NPP\n-30% prec  1year freq", ylab = "NPP", xlab = "Time")
# # dev.off()
#
# #-------------------------------
# #           3y freq
# #-------------------------------
#
# # Manaus - 30% prec reduction - 3 year frequency application
# # !!!!! note this is the monthly integrated data frame!!!!!!!
# df_3y <- read.csv("/home/amazonfaceme/biancarius/CAETE-DVM-alloc-allom/outputs/MAN/experiments/30perc_reduction/MAN_30prec_3y/gridcell186-239/MAN_30prec_3y_monthly.csv")
df_3y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_3y_monthly.csv")
# Criando objetos de série temporal para todas as colunas
time_series_list_3y <- lapply(df_3y[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_3y) <- names(df_3y[, -1])
bfast_res_list_3y <- list()
res_bfast_3y <- bfast(time_series_list_3y$npp,
h = 0.25, max.iter = 1)
for (col_name in columns_to_process) {
res_bfast_3y <- bfast(time_series_list_3y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_3y[[col_name]] <- res_bfast_3y
# Save the plot
png(paste0(output_path_plots, "bfast_3y_anova_", col_name, ".png"))
plot(res_bfast_3y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
columns_to_process <- c("npp", "ctotal","evapm","wue")
for (col_name in columns_to_process) {
res_bfast_3y <- bfast(time_series_list_3y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_3y[[col_name]] <- res_bfast_3y
# Save the plot
png(paste0(output_path_plots, "bfast_3y_anova_", col_name, ".png"))
plot(res_bfast_3y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
#output path to save the plots of ecosystem functions
output_path_plots <- "/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/bfast/plots_ecosystem_functions/plot_anova_trend/"
for (col_name in columns_to_process) {
res_bfast_3y <- bfast(time_series_list_3y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_3y[[col_name]] <- res_bfast_3y
# Save the plot
png(paste0(output_path_plots, "bfast_3y_anova_", col_name, ".png"))
plot(res_bfast_3y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
for (col_name in columns_to_process) {
res_bfast_3y <- bfast(time_series_list_3y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_3y[[col_name]] <- res_bfast_3y
# Save the plot
png(paste0(output_path_plots, "bfast_3y_trend_", col_name, ".png"))
plot(res_bfast_3y, main = col_name, type = "trend", ANOVA = TRUE)
dev.off()
}
# # dev.off()
#
# #-------------------------------
# #           5y freq
# #-------------------------------
#
#
# # Manaus - 30% prec reduction - 3 year frequency application
# # !!!!! note this is the monthly integrated data frame!!!!!!!
# # df_5y <- read.csv("/home/amazonfaceme/biancarius/CAETE-DVM-alloc-allom/outputs/MAN/experiments/30perc_reduction/MAN_30prec_5y/gridcell186-239/MAN_30prec_5y_monthly.csv")
df_5y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_5y_monthly.csv")
# Criando objetos de série temporal para todas as colunas
time_series_list_5y <- lapply(df_5y[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_5y) <- names(df_5y[, -1])
bfast_res_list_5y <- list()
# Executar bfast
for (col_name in columns_to_process) {
res_bfast_5y <- bfast(time_series_list_5y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_5y[[col_name]] <- res_bfast_5y
# Save the plot
png(paste0(output_path_plots, "bfast_5y_anova_", col_name, ".png"))
plot(res_bfast_5y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
for (col_name in columns_to_process) {
res_bfast_5y <- bfast(time_series_list_5y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_5y[[col_name]] <- res_bfast_5y
# Save the plot
png(paste0(output_path_plots, "bfast_5y_trend_", col_name, ".png"))
plot(res_bfast_5y, main = col_name, type = "trend", ANOVA = TRUE)
dev.off()
}
# # dev.off()
#
# #-------------------------------
# #           7y freq
# #-------------------------------
#
#
# # Manaus - 30% prec reduction - 7 year frequency application
# # !!!!! note this is the monthly integrated data frame!!!!!!!
# # df_7y <- read.csv("/home/amazonfaceme/biancarius/CAETE-DVM-alloc-allom/outputs/MAN/experiments/30perc_reduction/MAN_30prec_7y/gridcell186-239/MAN_30prec_7y_monthly.csv")
df_7y <- read.csv("/home/bianca/bianca/CAETE-DVM-alloc-allom/scripts/monthly_mean_tables/MAN_30prec_7y_monthly.csv")
# Criando objetos de série temporal para todas as colunas
time_series_list_7y <- lapply(df_7y[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_7y) <- names(df_7y[, -1])
bfast_res_list_7y<- list()
# Criando objetos de série temporal para todas as colunas
time_series_list_7y <- lapply(df_7y[, -1], function(col) {
ts(col, start = c(1979, 1), frequency = 12)
})
# Atribuindo nomes às séries temporais
names(time_series_list_7y) <- names(df_7y[, -1])
bfast_res_list_7y<- list()
# Executar bfast
for (col_name in columns_to_process) {
res_bfast_7y <- bfast(time_series_list_7y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_7y[[col_name]] <- res_bfast_7y
# Save the plot
png(paste0(output_path_plots, "bfast_7y_anova_", col_name, ".png"))
plot(res_bfast_7y, main = col_name, type = "components", ANOVA = TRUE)
dev.off()
}
for (col_name in columns_to_process) {
res_bfast_7y <- bfast(time_series_list_7y[[col_name]],
h = 0.25, max.iter = 1)
bfast_res_list_7y[[col_name]] <- res_bfast_7y
# Save the plot
png(paste0(output_path_plots, "bfast_7y_trend_", col_name, ".png"))
plot(res_bfast_7y, main = col_name, type = "trend", ANOVA = TRUE)
dev.off()
}
